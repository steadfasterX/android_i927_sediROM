#!/system/bin/sh
############################################################
#
# Copyright (c) 2015 by Thomas Fischer, www.se-di.de
# All rights reserved.
# v2.3
#
# This script is part of sediROM.
############################################################

echo "$(date +%D_%T) - sediROM($0): starting" >> /dev/kmsg

# path where the config and log will be saved
SEDIDIR=/preload/.sediROM

# Indicator file will be added by shutdown script and that requires at least 1 clean shutdown.
IFLAG=$SEDIDIR/.initialized

############################################################
# ensure that /data is not encrypted and if so we wait until it will
# be unlocked by the user
ENCSTATE=$(getprop vold.post_fs_data_done)

# ensure that system has booted completely
BOOTSTATE=$(getprop sys.boot_completed)

while [ ! "x$ENCSTATE" == "x1" ] || [ ! "x$BOOTSTATE" == "x1" ];do
    echo "$(date +%D_%T) - sediROM($0): /data (still) locked or sediROM is not fully initialized." >> /dev/kmsg
    RETIFLAG=$(test -f "$IFLAG")
    echo "$(date +%D_%T) - sediROM($0): iflag state was: > $RETIFLAG < (should be 0 or empty)." >> /dev/kmsg
    echo "$(date +%D_%T) - sediROM($0): boot state was: $BOOTSTATE (should be 1)." >> /dev/kmsg
    echo "$(date +%D_%T) - sediROM($0): Encryption test was: $ENCSTATE (should be 1)." >> /dev/kmsg
    sleep 10s
    # re-check states
    ENCSTATE=$(getprop vold.post_fs_data_done)
    BOOTSTATE=$(getprop sys.boot_completed)
    
    # wait until sdcard was initialized
    while [ ! -d "/sdcard/.sediROM" ];do sleep 3s ;done
    # if we were not able to use preload as log storage we will use sdcard instead    
    SEDISDDIR=/sdcard/.sediROM # if we cannot mount /preload this is a fallback
    INDIMOVED=$SEDISDDIR/dir-moved-2-preload.txt # indicator file to know if we are using preload or not               
    if [ ! -f "$INDIMOVED" ];then                                                                              
        SEDIDIR=$SEDISDDIR
    fi                                                                                                         
    echo "$(date +%D_%T) - sediROM($0): initflag dir set to $SEDIDIR" >> /dev/kmsg

    IFLAG=$SEDIDIR/.initialized
done

# set working dir according to the above result
WRKDIR=$SEDIDIR/initd
LOG=$WRKDIR/${0##*/}.log

echo "$(date +%D_%T) - sediROM: starting $0" > $LOG

# setup work dir
[ ! -d $WRKDIR ] && mkdir -p $WRKDIR

# starting sediROM first boot app when never initialized!
if [ ! -f "$IFLAG" ];then
    RETIFLAG=$(test -f "$IFLAG")
    echo "$(date +%D_%T) - sediROM($0): $IFLAG test was: $RETIFLAG (should be empty or 0)." >> /dev/kmsg
    # enable bluetooth so /data/misc/bluetoothd/MAC-ADRESS gets created:
    service call bluetooth 3
    # disable bluetooth again
    service call bluetooth 4
    # start sediROM first boot app:
    am start -n "de.secure_diversity.sedirom_boot/de.secure_diversity.sedirom_boot.sedirom_boot" -a android.intent.action.MAIN -c android.intent.category.LAUNCHER
fi

echo "$(date +%D_%T) - sediROM: $0 finished." >> $LOG
echo "$(date +%D_%T) - sediROM($0): finished." >> /dev/kmsg