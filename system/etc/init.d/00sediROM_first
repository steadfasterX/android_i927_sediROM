#!/system/bin/sh
#############################################################################################################################
#
# Author:   Thomas Fischer (xdajog) <mail@se-di.de>
# Desc:		This code is part of sediROM (http://forum.xda-developers.com/showthread.php?t=2789727)
# Version:  v2.24 (the first digit reflects the sediROM major version when this file has been created/changed/modified)
#
# License:  This code is licensed under the Creative Commons License CC BY-SA 4.0.
#
# DISCLAIMER:
# The following deed highlights only some of the key features and terms of the actual license.
# It is NOT a license and has NO legal value. You should carefully review ALL of the terms and conditions of the actual
# license before using the licensed material.
#
# Please check the following link for details and the full legal content:
# http://creativecommons.org/licenses/by-sa/4.0/legalcode
#
#    You are free to:
#
#       Share — copy and redistribute the material in any medium or format
#       Adapt — remix, transform, and build upon the material
#
#       for any purpose, even commercially.
#       The licensor cannot revoke these freedoms as long as you follow the license terms.
#
#    Under the following terms:
#
#       Attribution:
#          You must give appropriate credit, provide a link to the license, and indicate if changes were made.
#          You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.
#
#       ShareAlike:
#          If you remix, transform, or build upon the material, you must distribute your contributions under the same
#          license as the original.
#
#############################################################################################################################

echo "$(date +%D_%T) - sediROM($0): starting" >> /dev/kmsg

# path where the config and log will be saved
SEDIDIR=/preload/.sediROM
SEDISDDIR=/sdcard/.sediROM # if we cannot mount /preload this is a fallback
INDIMOVED=$SEDISDDIR/dir-moved-2-preload.txt # indicator file to know if we are using preload or not

WRKDIR=$SEDIDIR/initd
LOG=$WRKDIR/${0##*/}.log

# Load sediROM functions
SFUNC=/system/etc/sediROM/init.func
. $SFUNC
if [ $? -ne 0];then
    echo "$(date +%D_%T) - sediROM($0): ERROR - FUNCTION LIBRARY COULD NOT INCLUDED! ABORTED!" >> /dev/kmsg
    exit 9
else
    echo "$(date +%D_%T) - sediROM($0): function library included successfully." >> /dev/kmsg
fi

# Wait until system is usable (decrypted and mounted)
PARTITION_WAIT "$0"

# setup work dir depending on if we have preload or not
mount -oremount,rw /preload
if [ $? -eq 0 ];then
    echo "$(date) - sediROM: starting $0" > $LOG
    echo "$(date): mounted /preload read-writable. Will use $SEDIDIR as working dir.." >> $LOG

    # setup work dir and mig log
    [ ! -d $WRKDIR ] && mkdir -p $WRKDIR
    MLOG=$WRKDIR/${0##*/}_migration.log
    echo "$(date) - sediROM: Migration log started" > $MLOG
    
    # migrate to preload if needed
    [ -d $SEDISDDIR ] && cp -a $SEDISDDIR/* $SEDIDIR/ >> $MLOG && rm -r $SEDISDDIR && echo "$(date): Copied content of $WRKDIR to $SEDISDDIR and deleted old one" >> $MLOG
    
    # do the pseudo linkage to preload. why pseudo? because we cannot link through different filesystems..
    mkdir -p $SEDISDDIR
    echo "sediROM logs has been moved at $(date)! Goto $SEDIDIR." > $INDIMOVED && echo "$(date): sediROM logs has been moved from $SEDISDDIR to $SEDIDIR" >> $MLOG
else
    echo "$(date): /preload could not be mounted read-writable! Will use $SEDISDDIR as working dir.." >> $LOG
    [ -f "$INDIMOVED" ] && rm -f "$INDIMOVED"
    # change to the fallback SD path
    SEDIDIR=$SEDISDDIR
    
    # to be sure that the paths are really the changed one do the setvar again
    WRKDIR=$SEDIDIR/init
    LOG=$WRKDIR/${0##*/}.log
    
    # create working directory
    [ ! -d $WRKDIR ] && mkdir -p $WRKDIR
    echo "$(date) - sediROM: starting $0" > $LOG
fi


############################################################
# enable modifying 
#
mount -oremount,rw /
echo "$(date): mounted / read-writeable"  >> $LOG
mount -oremount,rw /system
echo "$(date): mounted /system read-writeable"  >> $LOG

############################################################
# Preparing crond startup (will be started in 99sediROM)
#
echo "$(date): preparing crond" >> $LOG

# crond has "/bin/sh" hardcoded
[ -d /bin ] || ln -s /system/bin /bin

# preparing crond req (getpwnam will check /etc/passwd)
PWDROOT=$(grep -c root /etc/passwd)
if [ ! -f /etc/passwd ]||[ z${PWDROOT} == "z0" ];then
    echo "$(date): passwd miss root entry or does not exist." >> $LOG
    if [ ! -f /etc/passwd ];then echo "root:x:0:0::/system/etc/cron.d:/system/bin/sh" > /etc/passwd ;else echo "root:x:0:0::/system/etc/cron.d:/system/bin/sh" >> /etc/passwd;fi
    echo "$(date): passwd created/updated." >> $LOG
fi
# should be root already but I like it to have it SURE
chown root /etc/passwd
# ensure only root can edit but everyone read
chmod 644 /etc/passwd

# do the same for group file
PWDROOT=$(grep -c root /etc/group)
if [ ! -f /etc/group ]||[ z${PWDROOT} == "z0" ];then
    echo "$(date): group miss root entry or does not exist." >> $LOG
    if [ ! -f /etc/group ];then echo "root:x:0:root" > /etc/group ;else echo "root:x:0:root" >> /etc/group;fi
    echo "$(date): group created/updated." >> $LOG
fi
# should be root already but I like it to have it SURE
chown root /etc/group
# ensure only root can edit but everyone read
chmod 644 /etc/group


############################################################
# compat hack when coming from jelly bean back to ICS..
#
[ ! -d /storage ] && mkdir /storage                                                                                   
[ ! -L /storage/sdcard0 ] && ln -s /mnt/sdcard /storage/sdcard0                                                       
[ ! -L /storage/sdcard1 ] && ln -s /mnt/sdcard/external_sd /storage/sdcard1 
echo "$(date): added mount point compatibility for users coming from JB"  >> $LOG

############################################################
# remount as ro again at the end
#
mount -oremount,ro /
echo "$(date): re-mounted / read-only"  >> $LOG
mount -oremount,ro /system
echo "$(date): re-mounted /system read-only"  >> $LOG

echo "$(date +%D_%T) - sediROM($0): finished" >> /dev/kmsg
####################################################################
######## NO CODE BEHIND THIS LINE ##################################
####################################################################