#!/system/bin/sh
############################################################
# This script is part of sediROM
# Copyright(c) 2014-2015 by Thomas Fischer, www.se-di.de
# v2.1
############################################################

#############################################################
# bluetooth loosing paired devices workaround
#

echo "sediROM: starting $0" >> /dev/kmsg

# path where the config and log will be saved
SEDIDIR=/sdcard/.sediROM/
BTFLAG=$SEDIDIR/.initialized

# following the BT fix (will overwrite when differs only). That means if you 
# want to enforce the backup/restore simply delete/rename the $BTBAK file and reboot.
CBAK=0
NBAK=0
WRKDIR=$SEDIDIR/btfix
BTNAME=00_btbackup.tar
BTBAK=$WRKDIR/$BTNAME
LOG=$WRKDIR/part1_shutdown.log

# ensure or setup working directory
if [ ! -d "$WRKDIR" ];then
    mkdir -p "$WRKDIR"
fi

# do the magic
echo "$(date +%D_%T): Starting BT fix part1 (shutdown execution).."  > $LOG
tar cfvp ${BTBAK}.tmp /data/misc/bluetoothd /data/misc/bluetooth 2>&1 >> $LOG

if [ -f $BTBAK ];then 
    CBAK=$(md5sum $BTBAK |cut -d " " -f1)
    NBAK=$(md5sum $BTBAK.tmp |cut -d " " -f1)
    echo "$(date +%D_%T): Old Backup MD5 is $CBAK" >> $LOG
    echo "$(date +%D_%T): Current MD5 sum is $NBAK" >> $LOG
else
    echo "First time backup. Will create initial setup." >> $LOG
    cp -vf ${BTBAK}.tmp $BTBAK 2>&1 >> $LOG
fi

if [ $CBAK != $NBAK ];then 
    echo "$(date +%D_%T): will create a new backup file because BT has changed." >> $LOG
    cp -vf ${BTBAK}.tmp $BTBAK 2>&1 >> $LOG
else
    echo "$(date +%D_%T): will not create a new backup file because BT hasn't changed." >> $LOG
fi

# set the initialization flag. this is absolutely necessary for encrypted
# devices in order to be able to detect things right
if [ ! -f $BTFLAG ];then echo "initialized on $(date +%D_%T)" > $BTFLAG ;fi

echo "sediROM: $0 finished." >> /dev/kmsg
